# SystemRescue
# https://www.system-rescue.org

iso_pattern="systemrescue-*.iso"

for isofile in $iso_dir/$iso_pattern; do
	if [ -e "$isofile" ]; then
		regexp --set=isoname "$iso_dir/(.*)" "$isofile"

		submenu "$isoname ->" "$isofile" {
			iso_path="$2"
			loopback loop $iso_path
			probe --label --set=cd_label (loop)
			isocfg="img_dev=$imgdevpath img_loop=$iso_path"
			bootoptions="archisobasedir=sysresccd archisolabel=$cd_label"
			linux_path="(loop)/sysresccd/boot/x86_64/vmlinuz"
			initrd_path="(loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img (loop)/sysresccd/boot/x86_64/sysresccd.img"

			menuentry "Boot SystemRescue using default options" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "Boot SystemRescue and copy system to RAM (copytoram)" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions copytoram
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "Boot SystemRescue and verify integrity of the medium (checksum)" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions checksum
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "Boot SystemRescue using basic display drivers (nomodeset)" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions nomodeset
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "Boot a Linux operating system installed on the disk (findroot)" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions findroot
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "Stop during the boot process before mounting the root filesystem" {
				echo Loading kernel...
				linux $linux_path $isocfg $bootoptions break
				echo Loading initrd...
				initrd $initrd_path
			}
		}
	fi
done
