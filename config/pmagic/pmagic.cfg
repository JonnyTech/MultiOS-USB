# Parted Magic
# https://partedmagic.com/

iso_pattern="pmagic_*.iso"
grub_configfile=""

for isofile in $iso_dir/$iso_pattern; do
	if [ -e "$isofile" ]; then
		regexp --set=isoname "$iso_dir/(.*)" "$isofile"

		submenu "$isoname ->" "$isofile" {
			iso_path="$2"
			loopback loop $iso_path
			isocfg="uuid=$rootuuid iso_filename=$iso_path"
			bootoptions=""
			linux_path="(loop)/pmagic/bzImage"
			initrd_path="(loop)/pmagic/initrd.img (loop)/pmagic/fu.img (loop)/pmagic/m.img"
			export isocfg linux_path initrd_path

			menuentry "1. Default settings (Runs from RAM 4GB+)" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "1a. Default settings with 4K Monitor" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg m4k=yes
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "1b. Default settings + language menu" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg lang=yes
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "2. Live with default settings (2GB+ RAM)" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg boot=live eject=no
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "2a. Live with default settings + language menu" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg boot=live eject=no lang=yes
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "3. Black/Blank Screen workaround" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg nomodeset
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "4. No official NVIDIA driver - Use Nouveau NVIDIA driver instead." {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg modprobe="nouveau"
				echo Loading initrd...
				initrd $initrd_path
			}
			menuentry "5. *** Hyper-V ***" {
				echo Loading kernel...
				linux $linux_path $bootoptions $isocfg fbdev=yes
				echo Loading initrd...
				initrd $initrd_path
			}
			if [ "${grub_platform}" == "efi" ]; then
				menuentry "6. Memtest86+" {
					echo Loading efi...
					chainloader (loop)/boot/memtest/BOOTX64.EFI
				}
				menuentry "7. EFI Shell" {
					terminal_output console
					echo Loading efi...
					chainloader (loop)/boot/edk2/Shell.efi
				}
			else
				menuentry "6. Memtest86+" {
					echo Loading...
					linux16 (loop)/boot/memtest/MEMTEST
				}
				menuentry "7. IPXE Network Boot+" {
					echo Loading...
					linux16 (loop)/boot/ipxe/ipxe.krn
				}
				menuentry "8. Plop Boot Manager+" {
					echo Loading...
					linux16 (loop)/boot/plpbt/plpbt.bin
				}
				menuentry "9. Hardware Detection Tool (HDT)" {
					echo Loading...
					linux16 (loop)/boot/syslinux/memdisk
					initrd16 (loop)/boot/syslinux/hdt.gz
				}
				menuentry "10. Super Grub Disk" {
					echo Loading...
					linux16 (loop)/boot/syslinux/memdisk
					initrd16 (loop)/boot/sgd/sgd.gz
				}
				menuentry "11. Super Grub2 Disk" {
					echo Loading...
					linux16 (loop)/boot/syslinux/memdisk iso raw
					initrd16 (loop)/boot/sgd/sgd2.gz
				}
				menuentry "12. MHDD" {
					echo Loading...
					linux16 (loop)/boot/syslinux/memdisk
					initrd16 (loop)/boot/mhdd/mhdd.gz
				}
			fi
			submenu "Extras Menu ->" {

				if [ "${grub_platform}" == "efi" ]; then
					menuentry "1. Super Grub2 Disk EFI" {
						echo Loading efi...
						chainloader (loop)/boot/supergrub2disk/super_grub2_disk_standalone_x86_64_efi_2.04s1.EFI
					}
				fi
				menuentry "2. Clonezilla" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg clonezilla=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "3. Nwipe" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg nwipe=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "4. Load iSCSI Kernel Modules" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg iscsi=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "5. Load config for xf86-video-qxl module" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg qxl=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				if [ "${grub_platform}" == "efi" ]; then
					menuentry "6. Refind" {
						echo Loading efi...
						chainloader (loop)/boot/refind/refind/refind_x64.efi
					}
				fi
			}
			submenu "Failsafe Menu ->" {

				menuentry "1. No ACPI (Advanced Configuration and Power Interface)" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg acpi=off
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "2. Do not eject CD" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg eject=no
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "3. Emulator compatibility" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg boot=live eject=no noreplace-paravirt
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "4. Console (boots to the shell)" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg consoleboot=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "5. Initrd.img (boot to initrd.img shell)" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg initrd_shell=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "6. Radeon no modeset" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg blacklist=radeon
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "7. No / force CPU Frequency Scaling" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg cpufreq=no
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "8. Force vesa workaround" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg xconfig=forcevesa
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "9. Force refresh rate" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg xconfig=forcerefresh nomodeset
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "10. Disable accelerated 3D graphics (DRI)" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg nodri=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "11. Missing Mouse Pointer" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg xmouse=yes
					echo Loading initrd...
					initrd $initrd_path
				}
				if [ "${grub_platform}" == "efi" ]; then
					menuentry "12. Macbook Pro 8,x Dual Graphics Workaround" {
						echo Loading kernel...
						linux $linux_path $bootoptions $isocfg
						outb 0x728 1 # Switch select
						outb 0x710 2 # Switch display
						outb 0x740 2 # Switch DDC
						outb 0x750 0 # Power down discrete graphics
						echo Loading initrd...
						initrd $initrd_path
					}
				fi
				menuentry "13. Libata noncq - Drive will not unlock" {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg libata.force=1.0:noncq
					echo Loading initrd...
					initrd $initrd_path
				}
				menuentry "14. No IPV6 - Stop Network Manager from disconnecting." {
					echo Loading kernel...
					linux $linux_path $bootoptions $isocfg blacklist=ipv6
					echo Loading initrd...
					initrd $initrd_path
				}
			}
		}
	fi
done
